legend.title = element_text(size = 8))
violinTheme = theme(axis.title = element_text(color = "black", size = 12),
axis.ticks.x = element_blank(),
axis.text.x = element_text(color = "black", size = 10),
legend.position = "none",
legend.key.size = unit(0.3, 'cm'),
panel.border = element_rect(color = "black", size = 1),
panel.background = element_blank(),
plot.background = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
pcaPlot12SA = ggplot() +
geom_hline(yintercept = 0, color = "gray90", size = 0.25) +
geom_vline(xintercept = 0, color = "gray90", size = 0.25) +
geom_point(data = pcangsd, aes(x = PC1, y = PC2, fill = site, shape = depth), color = "black", stroke = 0.25, size = 2.5, alpha = 0.5, show.legend = FALSE) +
geom_point(data = pcangsd, aes(x = mean.x, y = mean.y, fill = site, shape = depth), color = "black", size = 4, alpha = 1, stroke = 0.5) +
scale_shape_manual(values = c(21, 23), name = "Depth Zone") +
scale_fill_manual(values = flPal, name = "Site") +
scale_color_manual(values = flPal, name = "Site") +
labs(x = paste0("PC 1 (", format(round(xestoPcaVar[1], 1), nsmall = 1)," %)"), y = paste0("PC 2 (", format(round(xestoPcaVar[2], 1), nsmall = 1), " %)")) +
guides(shape = guide_legend(override.aes = list(size = 2, stroke = 0.25, alpha = NA), order = 2, ncol = 1), fill = guide_legend(override.aes = list(shape = 22, size = 2, fill = flPal, alpha = NA), order = 1, ncol = 1)) +
theme_bw()
pcaPlot12S = pcaPlot12SA +
pcaTheme +
theme(legend.position = c(0.15, 0.25))
# pcaPlot12S
# pcaPlot12RA = ggplot() +
#   geom_hline(yintercept = 0, color = "gray90", size = 0.5) +
#   geom_vline(xintercept = 0, color = "gray90", size = 0.5) +
#   geom_point(data = pcangsd, aes(x = PC1, y = PC2, fill = region, shape = depth), color = "black", stroke = 0.25, size = 2.5, alpha = 0.5, show.legend = FALSE) +
#   geom_point(data = pcangsd, aes(x = mean.x2, y = mean.y2, fill = region, shape = depth), color = "black", size = 4, alpha = 1, stroke = 0.5) +
#   scale_shape_manual(values = c(21, 23), name = "Depth Zone") +
#   scale_fill_manual(values = paletteer_d("wesanderson::Zissou1")[c(1,5)] , name = "Region") +
#   labs(x = paste0("PC 1 (", format(round(xestoPcaVar[1], 1), nsmall = 1)," %)"), y = paste0("PC 2 (", format(round(xestoPcaVar[2], 1), nsmall = 1), " %)")) +
#   guides(shape = "none", fill = guide_legend(override.aes = list(shape = 22, size = 2, alpha = NA), order = 1, ncol = 1))+
#   theme_bw()
#
# pcaPlot12R = pcaPlot12RA +
#   pcaTheme +
#   theme(legend.position = c(0.85,0.92))
pcaPlot12LA = ggplot() +
geom_hline(yintercept = 0, color = "gray90", size = 0.5) +
geom_vline(xintercept = 0, color = "gray90", size = 0.5) +
geom_point(data = pcangsd, aes(x = PC1, y = PC2, fill = cluster, shape = depth), color = "black", size = 2.5, alpha = 1, show.legend = TRUE) +
scale_shape_manual(values = c(21, 23), name = "Depth Zone") +
scale_fill_manual(values = xestoKColPal, name = "Lineage") +
labs(x = paste0("PC 1 (", format(round(xestoPcaVar[1], 1), nsmall = 1)," %)"), y = paste0("PC 2 (", format(round(xestoPcaVar[2], 1), nsmall = 1), " %)")) +
guides(shape = "none", fill = guide_legend(override.aes = list(shape = 22, size = 2, fill = xestoKColPal, alpha = NA), order = 1, ncol = 1))+
theme_bw()
pcaPlot12L = pcaPlot12LA +
pcaTheme +
theme(legend.position = c(0.12, 0.20))
pcaPlot23LA = ggplot() +
geom_hline(yintercept = 0, color = "gray90", size = 0.5) +
geom_vline(xintercept = 0, color = "gray90", size = 0.5) +
geom_point(data = pcangsd, aes(x = PC3, y = PC2, fill = cluster, shape = depth), color = "black", size = 2, alpha = 1, show.legend = TRUE) +
scale_shape_manual(values = c(21, 23), name = "Depth Zone") +
scale_fill_manual(values = xestoKColPal, name = "Lineage") +
labs(x = paste0("PC 3 (", format(round(xestoPcaVar[3], 1), nsmall = 1)," %)"), y = paste0("PC 2 (", format(round(xestoPcaVar[2], 1), nsmall = 1), " %)")) +
guides(shape = guide_legend(override.aes = list(size = 2, stroke = 0.5, alpha = NA), order = 2, ncol = 1), fill = guide_legend(override.aes = list(shape = 22, size = 2, fill = xestoKColPal, alpha = NA), order = 1, ncol = 1, byrow = TRUE))+
theme_bw()
pcaPlot23L = pcaPlot23LA +
pcaTheme
pcaPlots = (pcaPlot12S | pcaPlot12L | pcaPlot23L) +
plot_annotation(tag_levels = 'A') &
theme(plot.tag = element_text(size = 18),
panel.background = element_rect(fill = "white"),
legend.spacing = unit(-5, "pt"),
legend.key = element_blank(),
legend.background = element_blank())
pcaPlots
# ggsave("../figures/pcaPlots.png", plot = pcaPlots, height = 4.5, width = 14, units = "in", dpi = 300)
# ggsave("../figures/pcaPlots.svg", plot = pcaPlots, height = 4.5, width = 14, units = "in", dpi = 300)
cov = read.table("../data/flXestoPcangsd.cov") %>% as.matrix()
# pcAdmix = read.table("../data/K3.output") %>% dplyr::select(V6, V7, V8)
# pcAdmix %>% summarise(sum(V6),sum(V7), sum(V8))
pcAdmix = read.table("../data/admix/ngsAdmix/K4.output") %>% dplyr::select(V6, V7, V8, V9)
pcAdmix %>% summarise(sum(V6),sum(V7), sum(V8), sum(V9))
# pcAdmix = pcAdmix %>% dplyr::rename("cluster1" = "V6", "cluster2" = "V7", "cluster3" = "V8") %>% dplyr::select(order(colnames(.)))
pcAdmix = pcAdmix %>% dplyr::rename("cluster1" = "V6", "cluster2" = "V8", "cluster3" = "V9", "cluster4" = "V7") %>% dplyr::select(order(colnames(.)))
pcaEig = eigen(cov)
xestoPcaVar = pcaEig$values/sum(pcaEig$values)*100
head(xestoPcaVar)
pcangsd = read.csv("../data/flXestoMetaData.csv")[-c(7, 15, 16, 32, 125, 126, 165, 197, 198, 253, 254, 314, 315, 353, 354),] %>%  dplyr::select(sample, "site" = region, "depth" = depthZone, "depthm" = depthM) %>% cbind(pcAdmix)
pcangsd$sitedepth = as.factor(paste(pcangsd$site, pcangsd$depth, sep = " "))
pcangsd$sitedepth = factor(pcangsd$sitedepth)
pcangsd$sitedepth = factor(pcangsd$sitedepth, levels(pcangsd$sitedepth)[c(3, 12, 1, 2, 11, 10, 5, 4, 9, 8, 7, 6)])
pcangsd$site = factor(pcangsd$site)
pcangsd$site = factor(pcangsd$site, levels(pcangsd$site)[c(3, 8, 1, 2, 7, 4, 6, 5)])
pcangsd$depth = factor(pcangsd$depth)
pcangsd$depth = factor(pcangsd$depth, levels(pcangsd$depth)[c(2, 1)])
pcangsd$PC1 = pcaEig$vectors[,1]
pcangsd$PC2 = pcaEig$vectors[,2]
pcangsd$PC3 = pcaEig$vectors[,3]
pcangsd$PC4 = pcaEig$vectors[,4]
# pcangsdClust = pcAdmix %>% mutate(cluster = ifelse(cluster1 < 0.75 & cluster2 < 0.75  & cluster3 < 0.75, "NA", ifelse(cluster1 >=0.75, 1, ifelse(cluster2 >= 0.75, 2, ifelse(cluster3 >= 0.75, 3, 0)))))
pcangsdClust = pcAdmix %>% mutate(cluster = ifelse(cluster1 < 0.75 & cluster2 < 0.75  & cluster3 < 0.75 & cluster4 < 0.75, "NA", ifelse(cluster1 >=0.75, 1, ifelse(cluster2 >= 0.75, 2, ifelse(cluster3 >= 0.75, 3, ifelse(cluster4 >= 0.75, 4, 0))))))
pcangsd = pcangsd %>% mutate(cluster = pcangsdClust$cluster)
pcangsd$cluster = as.factor(pcangsd$cluster)
levels(pcangsd$cluster)
levels(pcangsd$cluster) = c("Xm1", "Xm2", "Xm3", "Xm4", "Admixed")
# levels(pcangsd$cluster) = c("Xm1", "Xm2", "Xm3", "Admixed")
# bamsClusters = pcangsd %>% dplyr::select(sample, cluster) %>% dplyr::arrange(sample)
# bamsSamples = read.delim("../data/snps/bamsNoClones", header = FALSE)
# bamsClusters$sample = bamsSamples$V1
# bamsClusters = as.data.frame(bamsClusters)
# write.table(x = bamsClusters, file = "../data/snps/bamsClusters", sep = "\t", row.names = FALSE, col.names = FALSE, quote = FALSE)
pcangsd = merge(pcangsd, aggregate(cbind(mean.x = PC1, mean.y = PC2)~sitedepth, pcangsd, mean), by="sitedepth")
# set.seed(942)
# pcPerm = adonis2(pcangsd[6:9] ~ site*depth, data = pcangsd, permutations = 999, method = "euclidean")
# pcPerm
pcaPlot12SA = ggplot() +
geom_hline(yintercept = 0, color = "gray90", size = 0.25) +
geom_vline(xintercept = 0, color = "gray90", size = 0.25) +
geom_point(data = pcangsd, aes(x = PC1, y = PC2, fill = site, shape = depth), color = "black", stroke = 0.25, size = 2.5, alpha = 0.5, show.legend = FALSE) +
geom_point(data = pcangsd, aes(x = mean.x, y = mean.y, fill = site, shape = depth), color = "black", size = 4, alpha = 1, stroke = 0.5) +
scale_shape_manual(values = c(21, 23), name = "Depth Zone") +
scale_fill_manual(values = flPal, name = "Site") +
scale_color_manual(values = flPal, name = "Site") +
labs(x = paste0("PC 1 (", format(round(xestoPcaVar[1], 1), nsmall = 1)," %)"), y = paste0("PC 2 (", format(round(xestoPcaVar[2], 1), nsmall = 1), " %)")) +
guides(shape = guide_legend(override.aes = list(size = 2, stroke = 0.25, alpha = NA), order = 2, ncol = 1), fill = guide_legend(override.aes = list(shape = 22, size = 2, fill = flPal, alpha = NA), order = 1, ncol = 1)) +
theme_bw()
pcaPlot12S = pcaPlot12SA +
pcaTheme +
theme(legend.position = c(0.15, 0.25))
# pcaPlot12S
# pcaPlot12RA = ggplot() +
#   geom_hline(yintercept = 0, color = "gray90", size = 0.5) +
#   geom_vline(xintercept = 0, color = "gray90", size = 0.5) +
#   geom_point(data = pcangsd, aes(x = PC1, y = PC2, fill = region, shape = depth), color = "black", stroke = 0.25, size = 2.5, alpha = 0.5, show.legend = FALSE) +
#   geom_point(data = pcangsd, aes(x = mean.x2, y = mean.y2, fill = region, shape = depth), color = "black", size = 4, alpha = 1, stroke = 0.5) +
#   scale_shape_manual(values = c(21, 23), name = "Depth Zone") +
#   scale_fill_manual(values = paletteer_d("wesanderson::Zissou1")[c(1,5)] , name = "Region") +
#   labs(x = paste0("PC 1 (", format(round(xestoPcaVar[1], 1), nsmall = 1)," %)"), y = paste0("PC 2 (", format(round(xestoPcaVar[2], 1), nsmall = 1), " %)")) +
#   guides(shape = "none", fill = guide_legend(override.aes = list(shape = 22, size = 2, alpha = NA), order = 1, ncol = 1))+
#   theme_bw()
#
# pcaPlot12R = pcaPlot12RA +
#   pcaTheme +
#   theme(legend.position = c(0.85,0.92))
pcaPlot12LA = ggplot() +
geom_hline(yintercept = 0, color = "gray90", size = 0.5) +
geom_vline(xintercept = 0, color = "gray90", size = 0.5) +
geom_point(data = pcangsd, aes(x = PC1, y = PC2, fill = cluster, shape = depth), color = "black", size = 2.5, alpha = 1, show.legend = TRUE) +
scale_shape_manual(values = c(21, 23), name = "Depth Zone") +
scale_fill_manual(values = xestoKColPal, name = "Lineage") +
labs(x = paste0("PC 1 (", format(round(xestoPcaVar[1], 1), nsmall = 1)," %)"), y = paste0("PC 2 (", format(round(xestoPcaVar[2], 1), nsmall = 1), " %)")) +
guides(shape = "none", fill = guide_legend(override.aes = list(shape = 22, size = 2, fill = xestoKColPal[1:4],"azure3", alpha = NA), order = 1, ncol = 1))+
theme_bw()
pcaPlot12L = pcaPlot12LA +
pcaTheme +
theme(legend.position = c(0.12, 0.20))
pcaPlot23LA = ggplot() +
geom_hline(yintercept = 0, color = "gray90", size = 0.5) +
geom_vline(xintercept = 0, color = "gray90", size = 0.5) +
geom_point(data = pcangsd, aes(x = PC3, y = PC2, fill = cluster, shape = depth), color = "black", size = 2, alpha = 1, show.legend = TRUE) +
scale_shape_manual(values = c(21, 23), name = "Depth Zone") +
scale_fill_manual(values = xestoKColPal, name = "Lineage") +
labs(x = paste0("PC 3 (", format(round(xestoPcaVar[3], 1), nsmall = 1)," %)"), y = paste0("PC 2 (", format(round(xestoPcaVar[2], 1), nsmall = 1), " %)")) +
guides(shape = guide_legend(override.aes = list(size = 2, stroke = 0.5, alpha = NA), order = 2, ncol = 1), fill = guide_legend(override.aes = list(shape = 22, size = 2, fill = xestoKColPal, alpha = NA), order = 1, ncol = 1, byrow = TRUE))+
theme_bw()
pcaPlot23L = pcaPlot23LA +
pcaTheme
pcaPlot12SA = ggplot() +
geom_hline(yintercept = 0, color = "gray90", size = 0.25) +
geom_vline(xintercept = 0, color = "gray90", size = 0.25) +
geom_point(data = pcangsd, aes(x = PC1, y = PC2, fill = site, shape = depth), color = "black", stroke = 0.25, size = 2.5, alpha = 0.5, show.legend = FALSE) +
geom_point(data = pcangsd, aes(x = mean.x, y = mean.y, fill = site, shape = depth), color = "black", size = 4, alpha = 1, stroke = 0.5) +
scale_shape_manual(values = c(21, 23), name = "Depth Zone") +
scale_fill_manual(values = flPal, name = "Site") +
scale_color_manual(values = flPal, name = "Site") +
labs(x = paste0("PC 1 (", format(round(xestoPcaVar[1], 1), nsmall = 1)," %)"), y = paste0("PC 2 (", format(round(xestoPcaVar[2], 1), nsmall = 1), " %)")) +
guides(shape = guide_legend(override.aes = list(size = 2, stroke = 0.25, alpha = NA), order = 2, ncol = 1), fill = guide_legend(override.aes = list(shape = 22, size = 2, fill = flPal, alpha = NA), order = 1, ncol = 1)) +
theme_bw()
pcaPlot12S = pcaPlot12SA +
pcaTheme +
theme(legend.position = c(0.15, 0.25))
# pcaPlot12S
# pcaPlot12RA = ggplot() +
#   geom_hline(yintercept = 0, color = "gray90", size = 0.5) +
#   geom_vline(xintercept = 0, color = "gray90", size = 0.5) +
#   geom_point(data = pcangsd, aes(x = PC1, y = PC2, fill = region, shape = depth), color = "black", stroke = 0.25, size = 2.5, alpha = 0.5, show.legend = FALSE) +
#   geom_point(data = pcangsd, aes(x = mean.x2, y = mean.y2, fill = region, shape = depth), color = "black", size = 4, alpha = 1, stroke = 0.5) +
#   scale_shape_manual(values = c(21, 23), name = "Depth Zone") +
#   scale_fill_manual(values = paletteer_d("wesanderson::Zissou1")[c(1,5)] , name = "Region") +
#   labs(x = paste0("PC 1 (", format(round(xestoPcaVar[1], 1), nsmall = 1)," %)"), y = paste0("PC 2 (", format(round(xestoPcaVar[2], 1), nsmall = 1), " %)")) +
#   guides(shape = "none", fill = guide_legend(override.aes = list(shape = 22, size = 2, alpha = NA), order = 1, ncol = 1))+
#   theme_bw()
#
# pcaPlot12R = pcaPlot12RA +
#   pcaTheme +
#   theme(legend.position = c(0.85,0.92))
pcaPlot12LA = ggplot() +
geom_hline(yintercept = 0, color = "gray90", size = 0.5) +
geom_vline(xintercept = 0, color = "gray90", size = 0.5) +
geom_point(data = pcangsd, aes(x = PC1, y = PC2, fill = cluster, shape = depth), color = "black", size = 2.5, alpha = 1, show.legend = TRUE) +
scale_shape_manual(values = c(21, 23), name = "Depth Zone") +
scale_fill_manual(values = xestoKColPal, name = "Lineage") +
labs(x = paste0("PC 1 (", format(round(xestoPcaVar[1], 1), nsmall = 1)," %)"), y = paste0("PC 2 (", format(round(xestoPcaVar[2], 1), nsmall = 1), " %)")) +
guides(shape = "none", fill = guide_legend(override.aes = list(shape = 22, size = 2, fill = c(xestoKColPal[1:4],"azure3"), alpha = NA), order = 1, ncol = 1))+
theme_bw()
pcaPlot12L = pcaPlot12LA +
pcaTheme +
theme(legend.position = c(0.12, 0.20))
pcaPlot23LA = ggplot() +
geom_hline(yintercept = 0, color = "gray90", size = 0.5) +
geom_vline(xintercept = 0, color = "gray90", size = 0.5) +
geom_point(data = pcangsd, aes(x = PC3, y = PC2, fill = cluster, shape = depth), color = "black", size = 2, alpha = 1, show.legend = TRUE) +
scale_shape_manual(values = c(21, 23), name = "Depth Zone") +
scale_fill_manual(values = fill = c(xestoKColPal[1:4],"azure3"), name = "Lineage") +
pcaPlot12SA = ggplot() +
geom_hline(yintercept = 0, color = "gray90", size = 0.25) +
geom_vline(xintercept = 0, color = "gray90", size = 0.25) +
geom_point(data = pcangsd, aes(x = PC1, y = PC2, fill = site, shape = depth), color = "black", stroke = 0.25, size = 2.5, alpha = 0.5, show.legend = FALSE) +
geom_point(data = pcangsd, aes(x = mean.x, y = mean.y, fill = site, shape = depth), color = "black", size = 4, alpha = 1, stroke = 0.5) +
scale_shape_manual(values = c(21, 23), name = "Depth Zone") +
scale_fill_manual(values = flPal, name = "Site") +
scale_color_manual(values = flPal, name = "Site") +
labs(x = paste0("PC 1 (", format(round(xestoPcaVar[1], 1), nsmall = 1)," %)"), y = paste0("PC 2 (", format(round(xestoPcaVar[2], 1), nsmall = 1), " %)")) +
guides(shape = guide_legend(override.aes = list(size = 2, stroke = 0.25, alpha = NA), order = 2, ncol = 1), fill = guide_legend(override.aes = list(shape = 22, size = 2, fill = flPal, alpha = NA), order = 1, ncol = 1)) +
theme_bw()
pcaPlot12S = pcaPlot12SA +
pcaTheme +
theme(legend.position = c(0.15, 0.25))
# pcaPlot12S
# pcaPlot12RA = ggplot() +
#   geom_hline(yintercept = 0, color = "gray90", size = 0.5) +
#   geom_vline(xintercept = 0, color = "gray90", size = 0.5) +
#   geom_point(data = pcangsd, aes(x = PC1, y = PC2, fill = region, shape = depth), color = "black", stroke = 0.25, size = 2.5, alpha = 0.5, show.legend = FALSE) +
#   geom_point(data = pcangsd, aes(x = mean.x2, y = mean.y2, fill = region, shape = depth), color = "black", size = 4, alpha = 1, stroke = 0.5) +
#   scale_shape_manual(values = c(21, 23), name = "Depth Zone") +
#   scale_fill_manual(values = paletteer_d("wesanderson::Zissou1")[c(1,5)] , name = "Region") +
#   labs(x = paste0("PC 1 (", format(round(xestoPcaVar[1], 1), nsmall = 1)," %)"), y = paste0("PC 2 (", format(round(xestoPcaVar[2], 1), nsmall = 1), " %)")) +
#   guides(shape = "none", fill = guide_legend(override.aes = list(shape = 22, size = 2, alpha = NA), order = 1, ncol = 1))+
#   theme_bw()
#
# pcaPlot12R = pcaPlot12RA +
#   pcaTheme +
#   theme(legend.position = c(0.85,0.92))
pcaPlot12LA = ggplot() +
geom_hline(yintercept = 0, color = "gray90", size = 0.5) +
geom_vline(xintercept = 0, color = "gray90", size = 0.5) +
geom_point(data = pcangsd, aes(x = PC1, y = PC2, fill = cluster, shape = depth), color = "black", size = 2.5, alpha = 1, show.legend = TRUE) +
scale_shape_manual(values = c(21, 23), name = "Depth Zone") +
scale_fill_manual(values = c(xestoKColPal[1:4],"azure3"), name = "Lineage") +
labs(x = paste0("PC 1 (", format(round(xestoPcaVar[1], 1), nsmall = 1)," %)"), y = paste0("PC 2 (", format(round(xestoPcaVar[2], 1), nsmall = 1), " %)")) +
guides(shape = "none", fill = guide_legend(override.aes = list(shape = 22, size = 2, fill = c(xestoKColPal[1:4],"azure3"), alpha = NA), order = 1, ncol = 1))+
theme_bw()
pcaPlot12L = pcaPlot12LA +
pcaTheme +
theme(legend.position = c(0.12, 0.20))
pcaPlot23LA = ggplot() +
geom_hline(yintercept = 0, color = "gray90", size = 0.5) +
geom_vline(xintercept = 0, color = "gray90", size = 0.5) +
geom_point(data = pcangsd, aes(x = PC3, y = PC2, fill = cluster, shape = depth), color = "black", size = 2, alpha = 1, show.legend = TRUE) +
scale_shape_manual(values = c(21, 23), name = "Depth Zone") +
scale_fill_manual(values = c(xestoKColPal[1:4],"azure3"), name = "Lineage") +
labs(x = paste0("PC 3 (", format(round(xestoPcaVar[3], 1), nsmall = 1)," %)"), y = paste0("PC 2 (", format(round(xestoPcaVar[2], 1), nsmall = 1), " %)")) +
guides(shape = guide_legend(override.aes = list(size = 2, stroke = 0.5, alpha = NA), order = 2, ncol = 1), fill = guide_legend(override.aes = list(shape = 22, size = 2, fill = xestoKColPal, alpha = NA), order = 1, ncol = 1, byrow = TRUE))+
theme_bw()
pcaPlot23L = pcaPlot23LA +
pcaTheme
pcaPlots = (pcaPlot12S | pcaPlot12L | pcaPlot23L) +
plot_annotation(tag_levels = 'A') &
theme(plot.tag = element_text(size = 18),
panel.background = element_rect(fill = "white"),
legend.spacing = unit(-5, "pt"),
legend.key = element_blank(),
legend.background = element_blank())
pcaPlots
# ggsave("../figures/pcaPlots.png", plot = pcaPlots, height = 4.5, width = 14, units = "in", dpi = 300)
# ggsave("../figures/pcaPlots.svg", plot = pcaPlots, height = 4.5, width = 14, units = "in", dpi = 300)
pcaPlots = (pcaPlot12S | pcaPlot12L | pcaPlot23L) +
plot_annotation(tag_levels = 'A') &
theme(plot.tag = element_text(size = 18),
panel.background = element_rect(fill = "white"),
legend.spacing = unit(-5, "pt"),
legend.key = element_blank(),
legend.background = element_blank())
pcaPlots
# ggsave("../figures/pcaPlots.png", plot = pcaPlots, height = 4.5, width = 14, units = "in", dpi = 300)
# ggsave("../figures/pcaPlots.svg", plot = pcaPlots, height = 4.5, width = 14, units = "in", dpi = 300)
ggsave("../figures/pcaPlots.png", plot = pcaPlots, height = 4.5, width = 14, units = "in", dpi = 300)
cov = read.table("../data/flXestoPcangsd.cov") %>% as.matrix()
pcAdmix = read.table("../data/admix/ngsAdmix/K4.output") %>% dplyr::select(V6, V7, V8, V9)
pcAdmix %>% summarise(sum(V6),sum(V7), sum(V8), sum(V9))
pcAdmix = pcAdmix %>% dplyr::rename("cluster1" = "V6", "cluster2" = "V7", "cluster3" = "V8", "cluster4" = "V9") %>% dplyr::select(order(colnames(.)))
pcaEig = eigen(cov)
xestoPcaVar = pcaEig$values/sum(pcaEig$values)*100
head(xestoPcaVar)
pcangsd = read.csv("../data/flXestoMetaData.csv")[-c(7, 15, 16, 32, 125, 126, 165, 197, 198, 253, 254, 314, 315, 353, 354),] %>%  dplyr::select(sample, "site" = region, "depth" = depthZone, "depthm" = depthM) %>% cbind(pcAdmix)
pcangsd$sitedepth = as.factor(paste(pcangsd$site, pcangsd$depth, sep = " "))
pcangsd$sitedepth = factor(pcangsd$sitedepth)
pcangsd$sitedepth = factor(pcangsd$sitedepth, levels(pcangsd$sitedepth)[c(3, 12, 1, 2, 11, 10, 5, 4, 9, 8, 7, 6)])
pcangsd$site = factor(pcangsd$site)
pcangsd$site = factor(pcangsd$site, levels(pcangsd$site)[c(3, 8, 1, 2, 7, 4, 6, 5)])
pcangsd$depth = factor(pcangsd$depth)
pcangsd$depth = factor(pcangsd$depth, levels(pcangsd$depth)[c(2, 1)])
pcangsd$PC1 = pcaEig$vectors[,1]
pcangsd$PC2 = pcaEig$vectors[,2]
pcangsd$PC3 = pcaEig$vectors[,3]
pcangsd$PC4 = pcaEig$vectors[,4]
pcangsdClust = pcAdmix %>% mutate(cluster = ifelse(cluster1 < 0.75 & cluster2 < 0.75  & cluster3 < 0.75 & cluster4 < 0.75, "NA", ifelse(cluster1 >=0.75, 1, ifelse(cluster2 >= 0.75, 2, ifelse(cluster3 >= 0.75, 3, ifelse(cluster4 >= 0.75, 4, 0))))))
pcangsd = pcangsd %>% mutate(cluster = pcangsdClust$cluster)
pcangsd$cluster = as.factor(pcangsd$cluster)
levels(pcangsd$cluster)
levels(pcangsd$cluster) = c("Xm1", "Xm2", "Xm3", "Xm4", "Admixed")
pcangsd = merge(pcangsd, aggregate(cbind(mean.x = PC1, mean.y = PC2)~sitedepth, pcangsd, mean), by="sitedepth")
pcangsd %>% group_by(cluster) %>% dplyr::summarize(n = n(),  prop = n*0.75)
pcangsd %>% group_by(depth,cluster) %>% dplyr::summarize(n = n())
pcaPlot12SA = ggplot() +
geom_hline(yintercept = 0, color = "gray90", size = 0.25) +
geom_vline(xintercept = 0, color = "gray90", size = 0.25) +
geom_point(data = pcangsd, aes(x = PC1, y = PC2, fill = site, shape = depth), color = "black", stroke = 0.25, size = 2.5, alpha = 0.5, show.legend = FALSE) +
geom_point(data = pcangsd, aes(x = mean.x, y = mean.y, fill = site, shape = depth), color = "black", size = 4, alpha = 1, stroke = 0.5) +
scale_shape_manual(values = c(21, 23), name = "Depth Zone") +
scale_fill_manual(values = flPal, name = "Site") +
scale_color_manual(values = flPal, name = "Site") +
labs(x = paste0("PC 1 (", format(round(xestoPcaVar[1], 1), nsmall = 1)," %)"), y = paste0("PC 2 (", format(round(xestoPcaVar[2], 1), nsmall = 1), " %)")) +
guides(shape = guide_legend(override.aes = list(size = 2, stroke = 0.25, alpha = NA), order = 2, ncol = 1), fill = guide_legend(override.aes = list(shape = 22, size = 2, fill = flPal, alpha = NA), order = 1, ncol = 1)) +
theme_bw()
pcaPlot12S = pcaPlot12SA +
pcaTheme +
theme(legend.position = c(0.15, 0.25))
pcaPlot12LA = ggplot() +
geom_hline(yintercept = 0, color = "gray90", size = 0.5) +
geom_vline(xintercept = 0, color = "gray90", size = 0.5) +
geom_point(data = pcangsd, aes(x = PC1, y = PC2, fill = cluster, shape = depth), color = "black", size = 2.5, alpha = 1, show.legend = TRUE) +
scale_shape_manual(values = c(21, 23), name = "Depth Zone") +
scale_fill_manual(values = c(xestoKColPal[1:4],"azure3"), name = "Lineage") +
labs(x = paste0("PC 1 (", format(round(xestoPcaVar[1], 1), nsmall = 1)," %)"), y = paste0("PC 2 (", format(round(xestoPcaVar[2], 1), nsmall = 1), " %)")) +
guides(shape = "none", fill = guide_legend(override.aes = list(shape = 22, size = 2, fill = c(xestoKColPal[1:4],"azure3"), alpha = NA), order = 1, ncol = 1))+
theme_bw()
pcaPlot12L = pcaPlot12LA +
pcaTheme +
theme(legend.position = c(0.12, 0.20))
pcaPlot23LA = ggplot() +
geom_hline(yintercept = 0, color = "gray90", size = 0.5) +
geom_vline(xintercept = 0, color = "gray90", size = 0.5) +
geom_point(data = pcangsd, aes(x = PC3, y = PC2, fill = cluster, shape = depth), color = "black", size = 2, alpha = 1, show.legend = TRUE) +
scale_shape_manual(values = c(21, 23), name = "Depth Zone") +
scale_fill_manual(values = c(xestoKColPal[1:4],"azure3"), name = "Lineage") +
labs(x = paste0("PC 3 (", format(round(xestoPcaVar[3], 1), nsmall = 1)," %)"), y = paste0("PC 2 (", format(round(xestoPcaVar[2], 1), nsmall = 1), " %)")) +
guides(shape = guide_legend(override.aes = list(size = 2, stroke = 0.5, alpha = NA), order = 2, ncol = 1), fill = guide_legend(override.aes = list(shape = 22, size = 2, fill = xestoKColPal, alpha = NA), order = 1, ncol = 1, byrow = TRUE))+
theme_bw()
pcaPlot23L = pcaPlot23LA +
pcaTheme
pcaPlots = (pcaPlot12S | pcaPlot12L | pcaPlot23L) +
plot_annotation(tag_levels = 'A') &
theme(plot.tag = element_text(size = 18),
panel.background = element_rect(fill = "white"),
legend.spacing = unit(-5, "pt"),
legend.key = element_blank(),
legend.background = element_blank())
pcaPlots
ggsave("../figures/pcaPlots.png", plot = pcaPlots, height = 4.5, width = 14, units = "in", dpi = 300)
ma = as.matrix(read.table("../data/ftl/xestoFTL.ibsMat"))
tr = hclust(dist(ma),"ave")
p1 = ggtree(tr, layout = "rectangular") #+ ggtree::geom_tiplab()
p1
# ma = as.matrix(read.table("../data/ftl/xestoFTL.ibsMat"))
ma = as.matrix(read.table("../data/xestoNoClones.ibsMat")) # reads in IBS matrix produced by ANGSD
dimnames(ma) = list(bams[,3],bams[,3])
{
tr = hclust(dist(ma),"ave")
p1 = ggtree(tr, layout = "rectangular") #+ ggtree::geom_tiplab()
p2 = facet_plot(p1, panel = "location", data=admixK2, geom = geom_tile, mapping = aes(x = 1, fill = site)) +
scale_fill_manual("Site", values = c("#802d2f",  "#ff595e",  "#ff924c",  "#f8e16f", "#95cf92",  "#369acc",  "#9656a2",  "#cbabd1")) +
new_scale_fill()
p3 = facet_plot(p2, panel = "depth zone", data=admixK2, geom = geom_tile, mapping = aes(x = 1, fill = depth)) +
scale_fill_manual("Depth zone", values = c("#A7E1BCFF", "#414083FF")) +
new_scale_fill()
p4 = facet_plot(p3, panel = "depth", data=admixK2, geom = geom_tile, mapping = aes(x = 1, fill = depthm), reverse) +
scale_fill_viridis_c("Depth (m)", option = "mako", trans = "reverse") +
new_scale_fill()
p5 = facet_plot(p4, panel="K = 2", data=admixK2_melt, geom=geom_barh, width = 1.0, mapping = aes(x = value, fill = variable),
stat='identity') +
scale_fill_manual("Lineage",values = xmKPal)
p6 = facet_plot(p5, panel="K = 3", data=admixK3_melt, geom=geom_barh, width = 1.0, mapping = aes(x = value, fill = variable),
stat='identity')
p7 = facet_plot(p6, panel="K = 4", data=admixK4_melt, geom=geom_barh, width = 1.0, mapping = aes(x = value, fill = variable),
stat='identity')
p8 = facet_plot(p7, panel="K = 5", data=admixK5_melt, geom=geom_barh, width = 1.0, mapping = aes(x = value, fill = variable),
stat='identity')
p9 = facet_plot(p8, panel="ADMIXTURE", data=admixture_melt, geom=geom_barh, width = 1.0, mapping = aes(x = value, fill = variable),
stat='identity') %>%
facet_labeller(c(Tree = "", location = "Site")) +
theme_tree(strip.text.x.bottom = element_text())
}
p4 = facet_plot(p3, panel = "depth", data=admixK2, geom = geom_tile, mapping = aes(x = 1, fill = depthm)) +
scale_fill_viridis_c("Depth (m)", option = "mako", trans = "reverse") +
new_scale_fill()
p5 = facet_plot(p4, panel="K = 2", data=admixK2_melt, geom=geom_barh, width = 1.0, mapping = aes(x = value, fill = variable),
stat='identity') +
scale_fill_manual("Lineage",values = xmKPal)
p6 = facet_plot(p5, panel="K = 3", data=admixK3_melt, geom=geom_barh, width = 1.0, mapping = aes(x = value, fill = variable),
stat='identity')
p7 = facet_plot(p6, panel="K = 4", data=admixK4_melt, geom=geom_barh, width = 1.0, mapping = aes(x = value, fill = variable),
stat='identity')
p8 = facet_plot(p7, panel="K = 5", data=admixK5_melt, geom=geom_barh, width = 1.0, mapping = aes(x = value, fill = variable),
stat='identity')
p9 = facet_plot(p8, panel="ADMIXTURE", data=admixture_melt, geom=geom_barh, width = 1.0, mapping = aes(x = value, fill = variable),
stat='identity') %>%
facet_labeller(c(Tree = "", location = "Site")) +
theme_tree(strip.text.x.bottom = element_text())
{
tr = hclust(dist(ma),"ave")
p1 = ggtree(tr, layout = "rectangular") #+ ggtree::geom_tiplab()
p2 = facet_plot(p1, panel = "location", data=admixK2, geom = geom_tile, mapping = aes(x = 1, fill = site)) +
scale_fill_manual("Site", values = c("#802d2f",  "#ff595e",  "#ff924c",  "#f8e16f", "#95cf92",  "#369acc",  "#9656a2",  "#cbabd1")) +
new_scale_fill()
p3 = facet_plot(p2, panel = "depth zone", data=admixK2, geom = geom_tile, mapping = aes(x = 1, fill = depth)) +
scale_fill_manual("Depth zone", values = c("#A7E1BCFF", "#414083FF")) +
new_scale_fill()
p4 = facet_plot(p3, panel = "depth", data=admixK2, geom = geom_tile, mapping = aes(x = 1, fill = depthm)) +
scale_fill_viridis_c("Depth (m)", option = "mako", trans = "reverse") +
new_scale_fill()
p5 = facet_plot(p4, panel="K = 2", data=admixK2_melt, geom=geom_barh, width = 1.0, mapping = aes(x = value, fill = variable),
stat='identity') +
scale_fill_manual("Lineage",values = xmKPal)
p6 = facet_plot(p5, panel="K = 3", data=admixK3_melt, geom=geom_barh, width = 1.0, mapping = aes(x = value, fill = variable),
stat='identity')
p7 = facet_plot(p6, panel="K = 4", data=admixK4_melt, geom=geom_barh, width = 1.0, mapping = aes(x = value, fill = variable),
stat='identity')
p8 = facet_plot(p7, panel="K = 5", data=admixK5_melt, geom=geom_barh, width = 1.0, mapping = aes(x = value, fill = variable),
stat='identity')
p9 = facet_plot(p8, panel="ADMIXTURE", data=admixture_melt, geom=geom_barh, width = 1.0, mapping = aes(x = value, fill = variable),
stat='identity') %>%
facet_labeller(c(Tree = "", location = "Site")) +
theme_tree(strip.text.x.bottom = element_text())
}
{facet_widths(p9, widths = c(0.8, 0.025, 0.025, 0.025, 0.15, 0.15, 0.15, 0.15, 0.25))
ggsave("../figures/figure2.png", height = 8, width = 14, units = "in", dpi = 300)}
cd noClones
pops = read.delim("../data/ftl/admix/bamsMainCluster")
View(pops)
pops = read.delim("../data/ftl/admix/bamsMainCluster", header = F)
pops = pops %>% dplyr::left_join(bams)
pops = read.delim("../data/ftl/admix/bamsMainCluster", header = F) %>% dplyr::rename("sample" = "V1")
pops = pops %>% dplyr::left_join(bams)
pops = read.delim("../data/ftl/admix/bamsMainCluster", header = F) %>% dplyr::rename("sample" = "V1")
pops = pops %>% dplyr::left_join(bams,unmatched = "drop")
pops = pops %>% dplyr::right_join(bams, unmatched = "drop")
pops = pops %>% dplyr::left_join(bams, unmatched = "drop")
pops = read.delim("../data/ftl/admix/bamsMainCluster", header = F) %>% dplyr::rename("sample" = "V1")
pops = pops %>% dplyr::left_join(bams, unmatched = "drop")
dplyr::filter(Sample != NA)
dplyr::filter(site != NA)
pops %>% dplyr::filter(site != NA)
pops %>% dplyr::filter(site != "NA")
pops = read.delim("../data/ftl/admix/bamsMainCluster", header = F) %>% dplyr::rename("sample" = "V1")
pops = pops %>% dplyr::left_join(bams, unmatched = "drop") %>% dplyr::filter(site != "NA")
pops = read.delim("../data/ftl/admix/bamsMainCluster", header = F) %>% dplyr::rename("sample" = "V1")
pops = pops %>% dplyr::left_join(bams, unmatched = "drop") %>% dplyr::filter(date != "NA")
pops = read.delim("../data/ftl/admix/bamsMainCluster", header = F) %>% dplyr::rename("sample" = "V1")
bams$sample <- gsub(".", "", bams$sample)
pops = read.delim("../data/ftl/admix/bamsMainCluster", header = F) %>% dplyr::rename("sample" = "V1")
pops = pops %>% dplyr::left_join(bams, unmatched = "drop") %>% dplyr::filter(date != "NA")
bams$sample
bams = read.csv("../data/flXestoMetaData.csv")[-c(7, 15, 16, 32, 125, 126, 165, 197, 198, 253, 254, 314, 315, 353, 354),] # list of bams files and their populations (tech reps removed)
bams$sample <- gsub("\.", "", bams$sample)
bams = read.csv("../data/flXestoMetaData.csv")[-c(7, 15, 16, 32, 125, 126, 165, 197, 198, 253, 254, 314, 315, 353, 354),] # list of bams files and their populations (tech reps removed)
bams$sample <- gsub("/.", "", bams$sample)
bams$region = factor(bams$region)
bams$region = factor(bams$region, levels = levels(bams$region)[c(3, 8, 1, 2, 7, 4, 6, 5)])
bams$depthZone = factor(bams$depthZone)
bams$depthZone = factor(bams$depthZone, levels = levels(bams$depthZone)[c(2,1)])
pops = read.delim("../data/ftl/admix/bamsMainCluster", header = F) %>% dplyr::rename("sample" = "V1")
pops = pops %>% dplyr::left_join(bams, unmatched = "drop") %>% dplyr::filter(date != "NA")
bams = read.csv("../data/flXestoMetaData.csv")[-c(7, 15, 16, 32, 125, 126, 165, 197, 198, 253, 254, 314, 315, 353, 354),] # list of bams files and their populations (tech reps removed)
bams$sample <- gsub("/.*", "", bams$sample)
bams$sample
bams$sample <- gsub("/..", "", bams$sample)
bams$sample
bams = read.csv("../data/flXestoMetaData.csv")[-c(7, 15, 16, 32, 125, 126, 165, 197, 198, 253, 254, 314, 315, 353, 354),] # list of bams files and their populations (tech reps removed)
bams$sample <- gsub("/..*", "", bams$sample)
bams$sample
bams = read.csv("../data/flXestoMetaData.csv")[-c(7, 15, 16, 32, 125, 126, 165, 197, 198, 253, 254, 314, 315, 353, 354),] # list of bams files and their populations (tech reps removed)
bams$sample <- gsub("/.\\[1-3]*", "", bams$sample)
pops = read.delim("../data/ftl/admix/bamsMainCluster", header = F) %>% dplyr::rename("sample" = "V1")
pops = pops %>% dplyr::left_join(bams, unmatched = "drop") %>% dplyr::filter(date != "NA")
View(bams)
bams = read.csv("../data/flXestoMetaData.csv")[-c(7, 15, 16, 32, 125, 126, 165, 197, 198, 253, 254, 314, 315, 353, 354),] # list of bams files and their populations (tech reps removed)
bams$sample <- gsub("/.\\[1-3]", "", bams$sample)
View(bams)
bams = read.csv("../data/flXestoMetaData.csv")[-c(7, 15, 16, 32, 125, 126, 165, 197, 198, 253, 254, 314, 315, 353, 354),] # list of bams files and their populations (tech reps removed)
bams$sample <- gsub("/.\\[1-3]*$", "", bams$sample)
bams = read.csv("../data/flXestoMetaData.csv")[-c(7, 15, 16, 32, 125, 126, 165, 197, 198, 253, 254, 314, 315, 353, 354),] # list of bams files and their populations (tech reps removed)
bams$sample <- gsub("\\.[1-3]*$", "", bams$sample)
pops = read.delim("../data/ftl/admix/bamsMainCluster", header = F) %>% dplyr::rename("sample" = "V1")
pops = pops %>% dplyr::left_join(bams, unmatched = "drop") %>% dplyr::filter(date != "NA")
pops = read.delim("../data/ftl/admix/bamsMainCluster", header = F) %>% dplyr::rename("sample" = "V1")
pops = pops %>% dplyr::left_join(bams, unmatched = "drop") %>% dplyr::filter(date != "NA") %>% select(sample,depthZone,region)
pops$pop = paste(pops$region, pops$depthZone, sep = "")
pops = pops %>% select(sample, pop)
pops$pop = gsub(" ","", pops$pop)
write_delim(pops, file = "../data/main/admix/mainPopMap.txt", col_names = FALSE)
write_delim(pops, file = "../data/main/admix/mainPopMap.txt", col_names = FALSE)
pops = pops %>% filter_(pop=="FtLauderdaleShallow")
pops = pops %>% dplyr::filter(pop=="FtLauderdaleShallow")
pops = read.delim("../data/ftl/admix/bamsMainCluster", header = F) %>% dplyr::rename("sample" = "V1")
pops = read.delim("../data/main/admix/bamsMainCluster", header = F) %>% dplyr::rename("sample" = "V1")
pops = pops %>% dplyr::left_join(bams, unmatched = "drop") %>% dplyr::filter(date != "NA") %>% select(sample,depthZone,region)
pops$pop = paste(pops$region, pops$depthZone, sep = "")
pops = pops %>% select(sample, pop)
pops$pop = gsub(" ","", pops$pop)
pops = pops %>% dplyr::filter(pop=="Ft.LauderdaleShallow")
pops = bams %>% dplyr::filter(region=="Ft. Lauderdale") %>% select(sample, region)
pops$region = gsub(" ","", pops$region)
write_delim(pops, file = "../data/ftl/admix/mainPopMap.txt", col_names = FALSE)
write_delim(pops, file = "../data/ftl/admix/mainPopMap.txt", col_names = FALSE)
write_delim(pops, file = "../data/ftl/admix/ftlPopMap.txt", col_names = FALSE)
